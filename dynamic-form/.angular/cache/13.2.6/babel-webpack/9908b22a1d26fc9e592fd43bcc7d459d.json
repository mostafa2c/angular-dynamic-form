{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { map } from 'rxjs/operators';\nimport { lastValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let MetaService = /*#__PURE__*/(() => {\n  class MetaService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    getMeta() {\n      return __awaiter(this, void 0, void 0, function* () {\n        return lastValueFrom(this.http.get('http://localhost:8080/meta.json').pipe(map(meta => meta.sort((a, b) => a.order - b.order))));\n      });\n    }\n\n    toFormGroup(controls, data) {\n      const group = {};\n      controls.forEach(control => {\n        if (control.controlType === 'textarea') {\n          group[control.key] = control.minLength ? new FormControl(data[control.key] || '', Validators.minLength(control.minLength)) : new FormControl(data[control.key] || '');\n        }\n\n        group[control.key] = control.required ? new FormControl(data[control.key] || '', Validators.required) : new FormControl(data[control.key] || '');\n      });\n      console.log(group);\n      return new FormGroup(group);\n    }\n\n  }\n\n  MetaService.ɵfac = function MetaService_Factory(t) {\n    return new (t || MetaService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  MetaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MetaService,\n    factory: MetaService.ɵfac,\n    providedIn: 'root'\n  });\n  return MetaService;\n})();","map":null,"metadata":{},"sourceType":"module"}